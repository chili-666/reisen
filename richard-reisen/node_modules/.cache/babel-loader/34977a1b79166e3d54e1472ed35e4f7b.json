{"ast":null,"code":"var _jsxFileName = \"/home/chili_666/projects/reisen/richard-reisen/src/components/utils/Paypal.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nclass Paypal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showButton: false\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          isScriptLoaded = _this$props.isScriptLoaded,\n          isScriptLoadSucceed = _this$props.isScriptLoadSucceed;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({\n        showButton: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const isScriptLoaded = nextProps.isScriptLoaded,\n          isScriptLoadSucceed = nextProps.isScriptLoadSucceed;\n    const isLoadedButWasntLoadedBefore = !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (isLoadedButWasntLoadedBefore) {\n      if (isScriptLoadSucceed) {\n        this.setState({\n          showButton: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          total = _this$props2.total,\n          currency = _this$props2.currency,\n          env = _this$props2.env,\n          commit = _this$props2.commit,\n          client = _this$props2.client,\n          onSuccess = _this$props2.onSuccess,\n          onError = _this$props2.onError,\n          onCancel = _this$props2.onCancel;\n    const showButton = this.state.showButton;\n\n    const payment = () => paypal.rest.payment.create(env, client, {\n      transactions: [{\n        amount: {\n          total,\n          currency\n        }\n      }]\n    });\n\n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n      const payment = {\n        paid: true,\n        cancelled: false,\n        payerID: data.payerID,\n        paymentID: data.paymentID,\n        paymentToken: data.paymentToken,\n        returnUrl: data.returnUrl\n      };\n      onSuccess(payment);\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, showButton && /*#__PURE__*/React.createElement(paypal.Button.react, {\n      env: env,\n      client: client,\n      commit: commit,\n      payment: payment,\n      onAuthorize: onAuthorize,\n      onCancel: onCancel,\n      onError: onError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }\n    }));\n  }\n\n}\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(Paypal);","map":{"version":3,"sources":["/home/chili_666/projects/reisen/richard-reisen/src/components/utils/Paypal.js"],"names":["React","ReactDOM","scriptLoader","Paypal","Component","constructor","props","state","showButton","window","componentDidMount","isScriptLoaded","isScriptLoadSucceed","setState","componentWillReceiveProps","nextProps","isLoadedButWasntLoadedBefore","render","total","currency","env","commit","client","onSuccess","onError","onCancel","payment","paypal","rest","create","transactions","amount","onAuthorize","data","actions","execute","then","paid","cancelled","payerID","paymentID","paymentToken","returnUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGAC,IAAAA,MAAM,CAACT,KAAP,GAAeA,KAAf;AACAS,IAAAA,MAAM,CAACR,QAAP,GAAkBA,QAAlB;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAAA,wBAId,KAAKJ,KAJS;AAAA,UAEhBK,cAFgB,eAEhBA,cAFgB;AAAA,UAGhBC,mBAHgB,eAGhBA,mBAHgB;;AAMlB,QAAID,cAAc,IAAIC,mBAAtB,EAA2C;AACzC,WAAKC,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD;AACF;;AAEDM,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AAAA,UAEjCJ,cAFiC,GAI/BI,SAJ+B,CAEjCJ,cAFiC;AAAA,UAGjCC,mBAHiC,GAI/BG,SAJ+B,CAGjCH,mBAHiC;AAMnC,UAAMI,4BAA4B,GAChC,CAAC,KAAKT,KAAL,CAAWC,UAAZ,IACA,CAAC,KAAKF,KAAL,CAAWK,cADZ,IAEAA,cAHF;;AAKA,QAAIK,4BAAJ,EAAkC;AAChC,UAAIJ,mBAAJ,EAAyB;AACvB,aAAKC,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF;AACF;;AAEHS,EAAAA,MAAM,GAAG;AAAA,yBAUL,KAAKX,KAVA;AAAA,UAEPY,KAFO,gBAEPA,KAFO;AAAA,UAGPC,QAHO,gBAGPA,QAHO;AAAA,UAIPC,GAJO,gBAIPA,GAJO;AAAA,UAKPC,MALO,gBAKPA,MALO;AAAA,UAMPC,MANO,gBAMPA,MANO;AAAA,UAOPC,SAPO,gBAOPA,SAPO;AAAA,UAQPC,OARO,gBAQPA,OARO;AAAA,UASPC,QATO,gBASPA,QATO;AAAA,UAaPjB,UAbO,GAcL,KAAKD,KAdA,CAaPC,UAbO;;AAgBT,UAAMkB,OAAO,GAAG,MAChBC,MAAM,CAACC,IAAP,CAAYF,OAAZ,CAAoBG,MAApB,CAA2BT,GAA3B,EAAgCE,MAAhC,EAAwC;AACtCQ,MAAAA,YAAY,EAAE,CACZ;AACEC,QAAAA,MAAM,EAAE;AACNb,UAAAA,KADM;AAENC,UAAAA;AAFM;AADV,OADY;AADwB,KAAxC,CADA;;AAYF,UAAMa,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,KAClBA,OAAO,CAACR,OAAR,CAAgBS,OAAhB,GACGC,IADH,CACQ,MAAM;AACV,YAAMV,OAAO,GAAG;AACdW,QAAAA,IAAI,EAAE,IADQ;AAEdC,QAAAA,SAAS,EAAE,KAFG;AAGdC,QAAAA,OAAO,EAAEN,IAAI,CAACM,OAHA;AAIdC,QAAAA,SAAS,EAAEP,IAAI,CAACO,SAJF;AAKdC,QAAAA,YAAY,EAAER,IAAI,CAACQ,YALL;AAMdC,QAAAA,SAAS,EAAET,IAAI,CAACS;AANF,OAAhB;AASAnB,MAAAA,SAAS,CAACG,OAAD,CAAT;AACD,KAZH,CADF;;AAeE,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlB,UAAU,iBAAI,oBAAC,MAAD,CAAQ,MAAR,CAAe,KAAf;AACb,MAAA,GAAG,EAAEY,GADQ;AAEb,MAAA,MAAM,EAAEE,MAFK;AAGb,MAAA,MAAM,EAAED,MAHK;AAIb,MAAA,OAAO,EAAEK,OAJI;AAKb,MAAA,WAAW,EAAEM,WALA;AAMb,MAAA,QAAQ,EAAEP,QANG;AAOb,MAAA,OAAO,EAAED,OAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,CADF;AAaD;;AAhGkC;;AAmGrC,eAAetB,YAAY,CAAC,+CAAD,CAAZ,CAA8DC,MAA9D,CAAf","sourcesContent":["import React from \"react\"\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nclass Paypal extends React.Component {\n    constructor(props) {\n        super(props);\n     \n        this.state = {\n          showButton: false,\n        };\n        window.React = React;\n        window.ReactDOM = ReactDOM;\n      }\n\n      componentDidMount() {\n        const {\n          isScriptLoaded,\n          isScriptLoadSucceed\n        } = this.props;\n     \n        if (isScriptLoaded && isScriptLoadSucceed) {\n          this.setState({ showButton: true });\n        }\n      }\n\n      componentWillReceiveProps(nextProps) {\n        const {\n          isScriptLoaded,\n          isScriptLoadSucceed,\n        } = nextProps;\n     \n        const isLoadedButWasntLoadedBefore =\n          !this.state.showButton &&\n          !this.props.isScriptLoaded &&\n          isScriptLoaded;\n     \n        if (isLoadedButWasntLoadedBefore) {\n          if (isScriptLoadSucceed) {\n            this.setState({ showButton: true });\n          }\n        }\n      }\n\n    render() {\n    const {\n      total,\n      currency,\n      env,\n      commit,\n      client,\n      onSuccess,\n      onError,\n      onCancel,\n    } = this.props;\n \n    const {\n      showButton,\n    } = this.state;\n \n    const payment = () =>\n    paypal.rest.payment.create(env, client, {\n      transactions: [\n        {\n          amount: {\n            total,\n            currency,\n          }\n        },\n      ],\n    });\n\n  const onAuthorize = (data, actions) =>\n    actions.payment.execute()\n      .then(() => {\n        const payment = {\n          paid: true,\n          cancelled: false,\n          payerID: data.payerID,\n          paymentID: data.paymentID,\n          paymentToken: data.paymentToken,\n          returnUrl: data.returnUrl,\n        };\n\n        onSuccess(payment);\n      });\n \n    return (\n      <div>\n        {showButton && <paypal.Button.react\n          env={env}\n          client={client}\n          commit={commit}\n          payment={payment}\n          onAuthorize={onAuthorize}\n          onCancel={onCancel}\n          onError={onError}\n        />}\n      </div>\n    );\n  }\n}\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(Paypal);"]},"metadata":{},"sourceType":"module"}